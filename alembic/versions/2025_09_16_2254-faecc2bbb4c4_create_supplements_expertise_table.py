"""create supplements_expertise table

Revision ID: faecc2bbb4c4
Revises: 5759c611453d
Create Date: 2025-09-16 22:54:55.815440

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "faecc2bbb4c4"
down_revision: Union[str, Sequence[str], None] = "5759c611453d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "supplements_expertise",
        sa.PrimaryKeyConstraint("id", name=op.f("pk_supplements_expertise")),
        sa.Column("supplement_id", sa.Integer(), nullable=False),
        sa.Column("manufacturer_id", sa.Integer(), nullable=True),
        sa.Column("source_id", sa.Integer(), nullable=True),
        sa.Column(
            "label_percent", sa.Numeric(precision=5, scale=2), nullable=True
        ),
        sa.Column(
            "expertise_percent",
            sa.Numeric(precision=5, scale=2),
            nullable=True,
        ),
        sa.Column(
            "serving_size_g", sa.Numeric(precision=10, scale=3), nullable=True
        ),
        sa.Column(
            "label_active_g", sa.Numeric(precision=10, scale=3), nullable=True
        ),
        sa.Column(
            "expertise_active_g",
            sa.Numeric(precision=10, scale=3),
            nullable=True,
        ),
        sa.Column(
            "label_amount", sa.Numeric(precision=18, scale=6), nullable=True
        ),
        sa.Column(
            "expertise_amount",
            sa.Numeric(precision=18, scale=6),
            nullable=True,
        ),
        sa.Column("unit_code", sa.String(length=8), nullable=True),
        sa.Column("report_url", sa.Text(), nullable=True),
        sa.Column("comment", sa.Text(), nullable=True),
        sa.Column(
            "collected_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.CheckConstraint(
            "expertise_percent IS NULL OR (expertise_percent BETWEEN 0 AND 100)",
            name=op.f("ck_supplements_expertise_ck_expertise_percent_0_100"),
        ),
        sa.CheckConstraint(
            "label_percent IS NULL OR (label_percent BETWEEN 0 AND 100)",
            name=op.f("ck_supplements_expertise_ck_label_percent_0_100"),
        ),
        sa.ForeignKeyConstraint(
            ["manufacturer_id"],
            ["manufacturers.id"],
            name=op.f(
                "fk_supplements_expertise_manufacturer_id_manufacturers"
            ),
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["source_id"],
            ["sources.id"],
            name=op.f("fk_supplements_expertise_source_id_sources"),
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["supplement_id"],
            ["supplements.id"],
            name=op.f("fk_supplements_expertise_supplement_id_supplements"),
            ondelete="CASCADE",
        ),

    )
    op.create_index(
        "ix_expertise_supp_collected",
        "supplements_expertise",
        ["supplement_id", "collected_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_supplements_expertise_manufacturer_id"),
        "supplements_expertise",
        ["manufacturer_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_supplements_expertise_source_id"),
        "supplements_expertise",
        ["source_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_supplements_expertise_supplement_id"),
        "supplements_expertise",
        ["supplement_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_supplements_category_id"),
        "supplements",
        ["category_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_supplements_manufacturer_id"),
        "supplements",
        ["manufacturer_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_supplements_manufacturer_id"), table_name="supplements"
    )
    op.drop_index(op.f("ix_supplements_category_id"), table_name="supplements")
    op.drop_index(
        op.f("ix_supplements_expertise_supplement_id"),
        table_name="supplements_expertise",
    )
    op.drop_index(
        op.f("ix_supplements_expertise_source_id"),
        table_name="supplements_expertise",
    )
    op.drop_index(
        op.f("ix_supplements_expertise_manufacturer_id"),
        table_name="supplements_expertise",
    )
    op.drop_index(
        "ix_expertise_supp_collected", table_name="supplements_expertise"
    )
    op.drop_table("supplements_expertise")
    # ### end Alembic commands ###
